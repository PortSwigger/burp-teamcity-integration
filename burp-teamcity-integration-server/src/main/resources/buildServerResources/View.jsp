<%@ taglib prefix="props" tagdir="/WEB-INF/tags/props" %>

<jsp:useBean id="constants" class="net.portswigger.burp.api.teamcity.BurpScanConstantsBean"/>

<div class="parameter">
  URL of Burp API: <strong><props:displayValue name="${constants.apiUrl}" emptyValue="${constants.apiUrlEmpty}"/></strong>
</div>

<div class="parameter">
  Scan definition in JSON format (optional, in the format generated by the web service running on the Burp API endpoint): <strong><pre><props:displayValue name="${constants.scanDefinition}" emptyValue="${constants.scanDefinitionEmpty}"/></pre></strong>
</div>

<div class="parameter">
  Lowest severity issue required to fail the build: <strong><props:displayValue name="${constants.severityThreshold}" emptyValue="${constants.severityThresholdEmpty}"/></strong>
</div>

<div class="parameter">
  Lowest confidence issue required to fail the build: <strong><props:displayValue name="${constants.confidenceThreshold}" emptyValue="${constants.confidenceThresholdEmpty}"/></strong>
</div>

<div class="parameter">
  Length of time in seconds to wait before giving up: <strong><props:displayValue name="${constants.timeout}" emptyValue="${constants.timeoutEmpty}"/></strong>
</div>

<div class="parameter">
  Output issues in JSON form (verbose): <strong><props:displayValue name="${constants.outputJsonIssues}" emptyValue="${constants.outputJsonIssuesEmpty}"/></strong>
</div>

<div class="parameter">
  Self-signed TLS certificate, public part (optional, in X509 base64-encoded format, often a .pem file): <strong><pre><props:displayValue name="${constants.selfSignedCertX509}" emptyValue="${constants.selfSignedCertX509Empty}"/></pre></strong>
</div>

<i>Note that the dynamic input for this plugin is the content of the previous step's build output, specifically lines of the form "BURP_SCAN_URL = <URL to scan>"</i>